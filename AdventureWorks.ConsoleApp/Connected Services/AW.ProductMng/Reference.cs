//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdventureWorks.ConsoleApp.AW.ProductMng {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AW.ProductMng.IProductManager")]
    public interface IProductManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetProducts", ReplyAction="http://tempuri.org/IProductManager/GetProductsResponse")]
        AdventureWorks.DTO.Models.BL.SCProductDTO[] GetProducts(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetProducts", ReplyAction="http://tempuri.org/IProductManager/GetProductsResponse")]
        System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.SCProductDTO[]> GetProductsAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetDetails", ReplyAction="http://tempuri.org/IProductManager/GetDetailsResponse")]
        AdventureWorks.DTO.Models.BL.ProductDetailsDTO GetDetails(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetDetails", ReplyAction="http://tempuri.org/IProductManager/GetDetailsResponse")]
        System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.ProductDetailsDTO> GetDetailsAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetImage", ReplyAction="http://tempuri.org/IProductManager/GetImageResponse")]
        byte[] GetImage(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/GetImage", ReplyAction="http://tempuri.org/IProductManager/GetImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetImageAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/Test", ReplyAction="http://tempuri.org/IProductManager/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductManager/Test", ReplyAction="http://tempuri.org/IProductManager/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductManagerChannel : AdventureWorks.ConsoleApp.AW.ProductMng.IProductManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductManagerClient : System.ServiceModel.ClientBase<AdventureWorks.ConsoleApp.AW.ProductMng.IProductManager>, AdventureWorks.ConsoleApp.AW.ProductMng.IProductManager {
        
        public ProductManagerClient() {
        }
        
        public ProductManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdventureWorks.DTO.Models.BL.SCProductDTO[] GetProducts(int pageIndex, int pageSize) {
            return base.Channel.GetProducts(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.SCProductDTO[]> GetProductsAsync(int pageIndex, int pageSize) {
            return base.Channel.GetProductsAsync(pageIndex, pageSize);
        }
        
        public AdventureWorks.DTO.Models.BL.ProductDetailsDTO GetDetails(int productId) {
            return base.Channel.GetDetails(productId);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.ProductDetailsDTO> GetDetailsAsync(int productId) {
            return base.Channel.GetDetailsAsync(productId);
        }
        
        public byte[] GetImage(int productId) {
            return base.Channel.GetImage(productId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetImageAsync(int productId) {
            return base.Channel.GetImageAsync(productId);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
    }
}
