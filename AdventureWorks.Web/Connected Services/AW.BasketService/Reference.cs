//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdventureWorks.Web.AW.BasketService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AW.BasketService.IBasketService")]
    public interface IBasketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddProduct", ReplyAction="http://tempuri.org/IBasketService/AddProductResponse")]
        AdventureWorks.BL.Infrastructure.OperationDetails AddProduct(string basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddProduct", ReplyAction="http://tempuri.org/IBasketService/AddProductResponse")]
        System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> AddProductAsync(string basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveProduct", ReplyAction="http://tempuri.org/IBasketService/RemoveProductResponse")]
        AdventureWorks.BL.Infrastructure.OperationDetails RemoveProduct(string basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveProduct", ReplyAction="http://tempuri.org/IBasketService/RemoveProductResponse")]
        System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> RemoveProductAsync(string basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/ClearBasket", ReplyAction="http://tempuri.org/IBasketService/ClearBasketResponse")]
        AdventureWorks.BL.Infrastructure.OperationDetails ClearBasket(string basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/ClearBasket", ReplyAction="http://tempuri.org/IBasketService/ClearBasketResponse")]
        System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> ClearBasketAsync(string basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetBasketItems", ReplyAction="http://tempuri.org/IBasketService/GetBasketItemsResponse")]
        AdventureWorks.DTO.Models.BL.BasketDTO GetBasketItems(string basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetBasketItems", ReplyAction="http://tempuri.org/IBasketService/GetBasketItemsResponse")]
        System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.BasketDTO> GetBasketItemsAsync(string basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GenerateBasketId", ReplyAction="http://tempuri.org/IBasketService/GenerateBasketIdResponse")]
        string GenerateBasketId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GenerateBasketId", ReplyAction="http://tempuri.org/IBasketService/GenerateBasketIdResponse")]
        System.Threading.Tasks.Task<string> GenerateBasketIdAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasketServiceChannel : AdventureWorks.Web.AW.BasketService.IBasketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasketServiceClient : System.ServiceModel.ClientBase<AdventureWorks.Web.AW.BasketService.IBasketService>, AdventureWorks.Web.AW.BasketService.IBasketService {
        
        public BasketServiceClient() {
        }
        
        public BasketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdventureWorks.BL.Infrastructure.OperationDetails AddProduct(string basketId, int productId, int quantity) {
            return base.Channel.AddProduct(basketId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> AddProductAsync(string basketId, int productId, int quantity) {
            return base.Channel.AddProductAsync(basketId, productId, quantity);
        }
        
        public AdventureWorks.BL.Infrastructure.OperationDetails RemoveProduct(string basketId, int productId, int quantity) {
            return base.Channel.RemoveProduct(basketId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> RemoveProductAsync(string basketId, int productId, int quantity) {
            return base.Channel.RemoveProductAsync(basketId, productId, quantity);
        }
        
        public AdventureWorks.BL.Infrastructure.OperationDetails ClearBasket(string basketId) {
            return base.Channel.ClearBasket(basketId);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.BL.Infrastructure.OperationDetails> ClearBasketAsync(string basketId) {
            return base.Channel.ClearBasketAsync(basketId);
        }
        
        public AdventureWorks.DTO.Models.BL.BasketDTO GetBasketItems(string basketId) {
            return base.Channel.GetBasketItems(basketId);
        }
        
        public System.Threading.Tasks.Task<AdventureWorks.DTO.Models.BL.BasketDTO> GetBasketItemsAsync(string basketId) {
            return base.Channel.GetBasketItemsAsync(basketId);
        }
        
        public string GenerateBasketId() {
            return base.Channel.GenerateBasketId();
        }
        
        public System.Threading.Tasks.Task<string> GenerateBasketIdAsync() {
            return base.Channel.GenerateBasketIdAsync();
        }
    }
}
